services:
  pymongo_api:
    build: api_app
    ports:
      - 8000:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router"
      MONGODB_DATABASE_NAME: "somedb"
    networks:
      app-network:
        ipv4_address: 173.17.0.6

  configSrv:
    image: mongo:latest # docker образ
    container_name: configSrv 
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_rs",
        "--bind_ip_all",
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "rs1",
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "rs2",
        "--bind_ip_all",
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    ports:
      - 27019:27017
    expose:
      - "27017"
    command:
      [
        "mongos",
        "--configdb", 
        "config_rs/configSrv:27019",
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard1-data:
  shard2-data:
  mongodb_data_container:
